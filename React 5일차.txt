
React 5일차
클릭하면 <Mode/> 등장하도록 하려면?
if(조건식){
실행할 코드
}else{
실행할 코드
}

if 대신 삼항연산자(JSX안의 {}내에서 쓰기 가능)
<Mode>를 언제 보여줄까요?
리액트에선 UI를 만들때 state데이터를 이용합니다
모드 창을 켜고 닫는 스위치
리액트에선 UI를 만들때 state로 UI보임/안보임 스위치를 넣음
state 변경하시려면 state 변경함수 쓰세요

React에서 클릭시 등장하는 UI만드는 법
let[mode, mode변경] = useState(false); // 모드창을 켜고 닫는 스위치, 사이트 창 첫 로드시 모드 창은 안보임, 
let[mode, mode변경] = useState(true);//아까 그 제목 누르면 모드창 보여야함
<h3 onClick={()=>{mode변경(true)}}>//</h3><h3>를 누르면 모달창이 보이게?

{
 1<3
 ?<Mode></Mode>
 : null //(텅빈HTML 이란뜻)
}

{
 mode === true
 ?<Mode></Mode>
 : null //(텅빈HTML 이란뜻)
}

숙제
버튼을 누르면 모달창 열림 한번 더 누르면 닫힘 
function App(){
let[mode, mode변경] = useState(false);
return(
<div>Html 잔뜩있는 곳
<button onClick={()=>{mode변경(true)}}>열기</button>
{
 mode === true
 ? <Mode/>
 :null
}
</div>
)
}

리액트에선 HTML도 반복문으로 반복시킬 수 있음
array내의 모든 데이터에 똑같은 작업을 시켜주고 싶을때 .map()
.map()은 유사 반복문 입니다.
반복문 쓰는법
{map()}

var 어레이 = [2,3,4];

var 뉴어레이 = 어레이. map(function(a){
	return a * 2
});

반복문 쓰는법 2
{반복할데이터.map(()=>{return<HTML>})}
예제1
{
	글제목.map(function(){
	return<div>안녕</div>
})
}

예제2
{
	글제목.map(function(){
	return<div className="list">
	<h3>{글제목[1]}</h3>
	<p>2월 18일 발행</p>
	<hr/>
	</div>
})
}

반복될 때 마다 제목부분에 각각 다른 데이터가 들어가고 싶어요
예제3

{
	글제목.map(function(글){ //글이 의미 하는것은 글제목 안에 들어있던 하나 하나의 데이터를 의미함
	return<div className="list">
	<h3>{글}</h3>
	<p>2월 18일 발행</p>
	<hr/>
	</div>
})
}

for  반복문을 쓰고 싶다면? for in / for of 도 동일하다
-보통 함수안에서 사용함
-array에 HTML 추가하는 방식
-그리고 array를 return 으로 뱉어냄

예제4

function 반복된UI(){
var 어레이 = [];
for(var i =0; i<3; i++){
	어레이.push(<div>안녕</div>); //반복문이 3번도는동안 div를 푸쉬해주세요
}
return 어레이
}

그리고 원하는 부분에 반복문 첨가
{ 반복된UI()}

App.js
/* eslint-disable */

import React, {useState} from 'react';
import logo from './logo.svg';
import './App.css';

function App() {

  let [글제목, 글제목변경] = useState(['남자 코트 추천', '강남 우동 맛집']);
  let [글제목2, 글제목변경2] = useState(['이반꿀', '막창 맛집']);
  let [좋아요, 좋아요변경] = useState(0);
  let [좋아요2, 좋아요변경2] = useState(0);
  let [좋아요3, 좋아요변경3] = useState(0);
  let [mode, mode변경] = useState(false);

  function 반복된UI(){
    var 어레이 = [];
    for(var i=0; i<3; i++){
      어레이.push(<div>불장 가즈아~</div>);
    }

    return 어레이
  }
  let posts= '강남 고기 맛집';
  
  //function 제목바꾸기(){
    //var newArray = [...글제목];
    //newArray[0] = '여자 코트 추천';
    //글제목변경(newArray);
  //}

  return (
    <div className="App">
     <div className="black-nav">
       <div style={{ color : 'white', fontSize : '30px' }}>개발 Blog</div> 
     </div>
     <div className="list">
     <h3>{ 글제목[0] }<span onClick={ ()=>{좋아요변경(좋아요 + 1) } }>👍</span>{좋아요}</h3>
     <p>3월 13일 발행</p>
     <hr/>
    </div>
    <div className="list">
     <h3>{ 글제목2[0] }<span onClick={()=>{좋아요변경2(좋아요2 + 1) }}>👍</span>{좋아요2}</h3>
     <p>3월 14일 발행</p>
     <hr/>
    </div>
    <div className="list">
     <h3 onClick={ ()=>{ mode변경(true) }}>{ 글제목2[1] }<span onClick={()=>{좋아요변경3(좋아요3 + 1) }}>👍</span>{좋아요3}</h3>
     <p>3월 15일 발행</p>
     <hr/>
    </div>

    {
      글제목.map(function(글){
        return(<div className="list">
        <h3>{ 글 }<span onClick={ ()=>{좋아요변경(좋아요 + 1) } }>👍</span>{좋아요}</h3>
        <p>3월 13일 발행</p>
        <hr/>
       </div>
        )
      })
    }
    { 반복된UI()}
    {
      mode === true
      ? <Mode></Mode> 
      : null
    }

    </div>
  );
}

function Mode(){
  return(
    
    <div className="mode">
    <h2>제목<span> REACT 사용법 </span></h2>
    <p>날짜<span> 2022-03-15 </span></p>
    <p>상세내용<span> REACT의 기본원리와 문법 </span></p>
    </div>
    
  )
}

export default App;
